#user  nobody;
worker_processes  2;

events {
    worker_connections  2048;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout       120s;
    send_timeout            120s;
    proxy_connect_timeout   120s;
    proxy_send_timeout      120s;
    proxy_read_timeout      120s;
    proxy_buffering          off;

    gzip                    on;
    gzip_http_version       1.0;
    gzip_min_length         1100;
    gzip_buffers            4 8k;
    gzip_comp_level         1;
    server_tokens off;

    upstream backend {
        include environment_backend_proxy[.]conf;
    }

    server {

        root /frontend;

        listen 80 default_server;
        server_name 0.0.0.0;

        location /ws {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/files/ {
            proxy_pass http://backend;
            # 512M as hardcoded in DIAL Core
            client_max_body_size 512M;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/embeddings/ {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/compile {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/calculate {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/download {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/schema {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/functions {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        location ~ ^/v1/parse-sheet {
            proxy_pass http://backend;
            include proxy-common.conf;
            include headers-common.conf;
        }

        # disable caching of the external-env.js credentials file
        location ~ /external-env.js {
          expires -1;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        # rewrite all routes to index.html
        location / {
            rewrite ^[\w\/\-\W]*$ /index.html;
            include headers-common.conf;
            expires off;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            set $isWebsocket 0;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires         off;
            include headers-common.conf;
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webp|webm|htc|wav)$ {
            set $isWebsocket 0;
            expires         1M;
            sendfile        on;
            tcp_nopush      on;
            tcp_nodelay     on;
            add_header      Cache-Control "public";
            include headers-common.conf;
        }

        location ~* \.(?:css|js|txt)$ {
            set $isWebsocket 0;
            expires         1M;
            sendfile        on;
            tcp_nopush      on;
            tcp_nodelay     on;
            add_header      Cache-Control "public";
            include headers-common.conf;
        }

        location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
            set $isWebsocket 0;
            expires         1M;
            sendfile        on;
            tcp_nopush      on;
            tcp_nodelay     on;
            add_header      Cache-Control "public";
            include headers-common.conf;
        }
    }
}
